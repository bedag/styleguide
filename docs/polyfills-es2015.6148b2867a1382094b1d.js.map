{"version":3,"sources":["webpack:///node_modules/classlist.js/classList.js","webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["self","document","createElement","createElementNS","view","elemCtrProto","Element","objCtr","Object","strTrim","String","trim","this","replace","arrIndexOf","Array","indexOf","item","i","len","length","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","classList","token","test","call","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","contains","add","tokens","arguments","l","updated","remove","index","splice","toggle","force","result","method","join","defineProperty","classListPropDesc","get","enumerable","configurable","ex","number","__defineGetter__","testElement","createMethod","original","DOMTokenList","prototype","_toggle","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","global","$localize","messageParts","expressions","translate","translation","stripBlock","raw","messagePart","rawMessagePart","charAt","substring","cooked","cookedIndex","rawIndex","performance","mark","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Zone","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","useG","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","ObjectGetPrototypeOf","getPrototypeOf","create","slice","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","writable","set","isWebWorker","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","errorEvent","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","Symbol","toStringTag","species","C","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","Promise","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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","file":"x","sourcesContent":["/*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.1.20150312\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\nif (\"document\" in self) {\n\n// Full polyfill for browsers with no classList support\n// Including IE < Edge missing SVGElement.classList\nif (!(\"classList\" in document.createElement(\"_\")) \n\t|| document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n(function (view) {\n\n\"use strict\";\n\nif (!('Element' in view)) return;\n\nvar\n\t  classListProp = \"classList\"\n\t, protoProp = \"prototype\"\n\t, elemCtrProto = view.Element[protoProp]\n\t, objCtr = Object\n\t, strTrim = String[protoProp].trim || function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t}\n\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\tvar\n\t\t\t  i = 0\n\t\t\t, len = this.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tif (i in this && this[i] === item) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t// Vendors: please allow content code to instantiate DOMExceptions\n\t, DOMEx = function (type, message) {\n\t\tthis.name = type;\n\t\tthis.code = DOMException[type];\n\t\tthis.message = message;\n\t}\n\t, checkTokenAndGetIndex = function (classList, token) {\n\t\tif (token === \"\") {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"SYNTAX_ERR\"\n\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t);\n\t\t}\n\t\tif (/\\s/.test(token)) {\n\t\t\tthrow new DOMEx(\n\t\t\t\t  \"INVALID_CHARACTER_ERR\"\n\t\t\t\t, \"String contains an invalid character\"\n\t\t\t);\n\t\t}\n\t\treturn arrIndexOf.call(classList, token);\n\t}\n\t, ClassList = function (elem) {\n\t\tvar\n\t\t\t  trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t, i = 0\n\t\t\t, len = classes.length\n\t\t;\n\t\tfor (; i < len; i++) {\n\t\t\tthis.push(classes[i]);\n\t\t}\n\t\tthis._updateClassName = function () {\n\t\t\telem.setAttribute(\"class\", this.toString());\n\t\t};\n\t}\n\t, classListProto = ClassList[protoProp] = []\n\t, classListGetter = function () {\n\t\treturn new ClassList(this);\n\t}\n;\n// Most DOMException implementations don't allow calling DOMException's toString()\n// on non-DOMExceptions. Error's toString() is sufficient here.\nDOMEx[protoProp] = Error[protoProp];\nclassListProto.item = function (i) {\n\treturn this[i] || null;\n};\nclassListProto.contains = function (token) {\n\ttoken += \"\";\n\treturn checkTokenAndGetIndex(this, token) !== -1;\n};\nclassListProto.add = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.push(token);\n\t\t\tupdated = true;\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.remove = function () {\n\tvar\n\t\t  tokens = arguments\n\t\t, i = 0\n\t\t, l = tokens.length\n\t\t, token\n\t\t, updated = false\n\t\t, index\n\t;\n\tdo {\n\t\ttoken = tokens[i] + \"\";\n\t\tindex = checkTokenAndGetIndex(this, token);\n\t\twhile (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tupdated = true;\n\t\t\tindex = checkTokenAndGetIndex(this, token);\n\t\t}\n\t}\n\twhile (++i < l);\n\n\tif (updated) {\n\t\tthis._updateClassName();\n\t}\n};\nclassListProto.toggle = function (token, force) {\n\ttoken += \"\";\n\n\tvar\n\t\t  result = this.contains(token)\n\t\t, method = result ?\n\t\t\tforce !== true && \"remove\"\n\t\t:\n\t\t\tforce !== false && \"add\"\n\t;\n\n\tif (method) {\n\t\tthis[method](token);\n\t}\n\n\tif (force === true || force === false) {\n\t\treturn force;\n\t} else {\n\t\treturn !result;\n\t}\n};\nclassListProto.toString = function () {\n\treturn this.join(\" \");\n};\n\nif (objCtr.defineProperty) {\n\tvar classListPropDesc = {\n\t\t  get: classListGetter\n\t\t, enumerable: true\n\t\t, configurable: true\n\t};\n\ttry {\n\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\tif (ex.number === -0x7FF5EC54) {\n\t\t\tclassListPropDesc.enumerable = false;\n\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t}\n\t}\n} else if (objCtr[protoProp].__defineGetter__) {\n\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n}\n\n}(self));\n\n} else {\n// There is full or partial native classList support, so just check if we need\n// to normalize the add/remove and toggle APIs.\n\n(function () {\n\t\"use strict\";\n\n\tvar testElement = document.createElement(\"_\");\n\n\ttestElement.classList.add(\"c1\", \"c2\");\n\n\t// Polyfill for IE 10/11 and Firefox <26, where classList.add and\n\t// classList.remove exist but support only one argument at a time.\n\tif (!testElement.classList.contains(\"c2\")) {\n\t\tvar createMethod = function(method) {\n\t\t\tvar original = DOMTokenList.prototype[method];\n\n\t\t\tDOMTokenList.prototype[method] = function(token) {\n\t\t\t\tvar i, len = arguments.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\ttoken = arguments[i];\n\t\t\t\t\toriginal.call(this, token);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tcreateMethod('add');\n\t\tcreateMethod('remove');\n\t}\n\n\ttestElement.classList.toggle(\"c3\", false);\n\n\t// Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n\t// support the second argument.\n\tif (testElement.classList.contains(\"c3\")) {\n\t\tvar _toggle = DOMTokenList.prototype.toggle;\n\n\t\tDOMTokenList.prototype.toggle = function(token, force) {\n\t\t\tif (1 in arguments && !this.contains(token) === !force) {\n\t\t\t\treturn force;\n\t\t\t} else {\n\t\t\t\treturn _toggle.call(this, token);\n\t\t\t}\n\t\t};\n\n\t}\n\n\ttestElement = null;\n}());\n\n}\n\n}\n\n","/**\n * @license Angular v11.2.3\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n* BROWSER POLYFILLS\n*/\n\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\nimport 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/******************************************************************\n * Load `$localize` - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"]}